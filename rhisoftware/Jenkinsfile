pipeline {
    agent any

    tools {
        maven 'Maven 3.8.1' // nom EXACT de la configuration Maven dans Jenkins
    }

    environment {
        DB_URL = 'jdbc:postgresql://192.168.0.102:5433/employe_db'
        DB_USERNAME = 'springuser'
        DB_PASSWORD = 'springpass'
    }

    stages {
        stage('🔧 Build') {
            steps {
                echo "🔨 Compilation du projet"
                sh 'mvn clean install -DskipTests'  // 👈 Utilise Maven installé par Jenkins
            }
        }

        stage('📦 Update Database with Liquibase') {
            steps {
                echo "📡 Exécution des migrations Liquibase"
                sh '''
                    mvn liquibase:update \
                        -Dliquibase.changeLogFile=src/main/resources/db.changelogs/db.changelog-master.yaml \
                        -Dliquibase.url=${DB_URL} \
                        -Dliquibase.username=${DB_USERNAME} \
                        -Dliquibase.password=${DB_PASSWORD}
                '''
            }
        }

        stage('🚀 Run App') {
            steps {
                echo "🧠 Démarrage de l'application Spring Boot"
                sh 'nohup mvn spring-boot:run &'
            }
        }
    }

    post {
        success {
            echo '✅ Déploiement réussi !'
        }
        failure {
            echo '❌ Une erreur est survenue pendant le pipeline.'
        }
    }
}
